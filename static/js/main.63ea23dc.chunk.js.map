{"version":3,"sources":["Chat.js","logo.svg","Join.js","App.js","reportWebVitals.js","index.js"],"names":["socket","Join","useState","Chat","msg","setMsg","search","useLocation","queryString","parse","name","room","useEffect","io","connect","reconnect","emit","error","alert","window","location","replace","on","msgs","existingMsg","close","className","id","map","message","index","trim","toLowerCase","user","dangerouslySetInnerHTML","__html","text","placeholder","onKeyDown","e","key","target","value","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIAUIA,E,0CCVW,I,oBCuBAC,EAlBJ,WAAK,IAAD,EAEQC,mBAAS,IAFjB,gCAGMA,mBAAS,KAHf,6BASb,OACI,kE,kEF2ESC,EA5EF,WAAO,IAAD,EACED,mBAAS,IADX,mBACVE,EADU,KACNC,EADM,KAEVC,EAAQC,cAARD,OAFU,EAGCE,IAAYC,MAAMH,GAA7BI,EAHU,EAGVA,KAAKC,EAHK,EAGLA,KAEdC,qBAAU,WAcV,OAbEZ,EAAOa,IAAGC,QAAQ,4CAA4C,CAACC,WAAU,KAClEC,KAAK,OAAO,CAACN,OAAKC,SAAM,SAACM,GAC9BC,MAAMD,GACNE,OAAOC,SAASC,QAAQ,QAK1BrB,EAAOsB,GAAG,QAAO,SAACC,GAEhBlB,GAAO,SAACmB,GAAD,4BAAmBA,GAAnB,CAA+BD,UAGnC,WACLvB,EAAOgB,KAAK,cACZhB,EAAOyB,WAGP,IAqBA,OACI,sBAAKC,UAAU,OAAf,UAEL,eAAC,IAAD,CAAgBC,GAAG,OAAOD,UAAU,OAApC,UAEC,uBAAK,uBAAK,uBAETtB,EAAIwB,KAAI,SAACC,EAAQC,GAAT,OAEP,sBAAKJ,UAAWhB,EAAKqB,OAAOC,gBAAgBH,EAAQI,KAAK,OAAO,UAAhE,UACA,sBAAMP,UAAU,OAAhB,SAAuB,4BAAIG,EAAQI,SAAgB,sBAAMP,UAAU,eAAeQ,wBAAyB,CAACC,OAAQN,EAAQO,QAC5H,gCAQJ,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBACvB,qBAAKT,GAAG,UAAR,SACA,uBAAOU,YAAY,KAAKV,GAAG,KAAKW,UA7BvB,SAACC,GACG,UAAVA,EAAEC,KAAmBD,EAAEE,OAAOC,QACnC1C,EAAOgB,KAAK,MAAMuB,EAAEE,OAAOC,OAC3BH,EAAEE,OAAOC,MAAM,a,QGjCAC,EAfL,WACR,OACE,mCACA,cAAC,IAAD,UACA,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7C,IACnC,cAAC,IAAD,CAAO4C,KAAK,QAAQC,UAAW3C,YCAlB4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.63ea23dc.chunk.js","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport React,{useEffect,useState,createRef} from 'react'\r\nimport {useLocation,Link} from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport io from 'socket.io-client'\r\nimport ScrollToBottom  from 'react-scroll-to-bottom'\r\n\r\n\r\n\r\nlet socket;\r\n\r\n\r\n\r\nconst Chat = () => {\r\n  const [msg,setMsg]=useState([])\r\n  const {search}=useLocation()\r\n  const {name,room}=queryString.parse(search );\r\n\r\nuseEffect(()=>{\r\n  socket=io.connect(\"https://cherry-plaid-diagnostic.glitch.me\",{reconnect:false})\r\n  socket.emit(\"join\",{name,room},(error)=>{\r\n    alert(error)\r\n    window.location.replace(\"/\");\r\n  })\r\n  \r\n  \r\n  \r\n  socket.on(\"msgs\",(msgs)=>{\r\n    \r\n    setMsg((existingMsg)=>[...existingMsg,msgs])\r\n  })\r\n\r\nreturn ()=>{\r\n  socket.emit(\"disconnect\");\r\n  socket.close();\r\n}\r\n  \r\n},[])\r\n\r\nfunction toggle() {\r\n  var x = document.getElementById(\"users\");\r\n  if (x.style.display === \"none\") {\r\n    x.style.display = \"block\";\r\n  } else {\r\n    x.style.display = \"none\";\r\n  }\r\n}\r\n\r\n  \r\n  \r\nconst send=(e)=>{\r\n  if(e.key === \"Enter\" && e.target.value){\r\nsocket.emit(\"msg\",e.target.value)\r\ne.target.value=\"\";\r\n\r\n  }\r\n}\r\n  \r\n  return(\r\n      <div className='chat'>\r\n    \r\n <ScrollToBottom id=\"body\" className=\"root\">\r\n  \r\n  <br/><br/><br/>\r\n \r\n  {msg.map((message,index)=>\r\n   \r\n    <div className={name.trim().toLowerCase()===message.user?\"self\":\"message\"}>\r\n    <span className=\"user\"><b>{message.user}</b></span><span className=\"message-text\" dangerouslySetInnerHTML={{__html: message.text}}></span>\r\n    <br />\r\n    </div>\r\n  \r\n  )}\r\n  \r\n\r\n\r\n</ScrollToBottom>\r\n<br/><br/><br/><br/><br/><br/>\r\n  <div id=\"sending\">\r\n  <input placeholder=\"Aa\" id='in' onKeyDown={send} />\r\n  </div>\r\n\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Chat;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React,{Fregment,useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Join=()=>{\r\n  \r\n  const [name,setName]=useState(\"\");\r\nconst [room,setRoom]=useState(\"\");\r\n  \r\n  \r\n  \r\n  \r\n    \r\n  return(\r\n      <>\r\n  /Chat?name=name&room=room\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Join;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Join from './Join'\r\nimport Chat from './Chat'\r\nimport React,{Fregment} from 'react'\r\nimport {HashRouter as Router,Route,Link,Switch} from 'react-router-dom'\r\nconst App=()=>{\r\n  return(\r\n    <>\r\n    <Router>\r\n    <Switch>\r\n    <Route exact path=\"/\" component={Join} />\r\n  <Route path=\"/Chat\" component={Chat} />\r\n    </Switch>\r\n    </Router>\r\n </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}